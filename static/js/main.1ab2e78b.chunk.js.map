{"version":3,"sources":["components/Title.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["styles","root","borderRadius","padding","height","backgroundColor","width","margin","single","boxShadow","button","border","input","title","dragged","update","useState","tasks","setTasks","singleTask","setSingleTask","addBtn","setAddbtn","newData","setNewData","handleClick","e","keyCode","console","log","drag","dataTransfer","setData","target","innerText","setTimeout","style","display","className","onDragOver","preventDefault","allowDrop","onDrop","data","getData","drop","onMouseEnter","id","map","i","idx","draggable","onDragStart","type","autoFocus","value","onChange","onKeyPress","key","onClick","justifyContent","setDragged","prop","tit","Title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.1ab2e78b.chunk.js","sourcesContent":["import React, { useState} from \"react\";\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    borderRadius: \"8px\",\r\n    padding: \"10px\",\r\n    height: \"fit-content\",\r\n    backgroundColor: \"#EBECF0\",\r\n    width: \"280px\",\r\n    margin: \"5px\"\r\n  },\r\n  single: {\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"#ffffff\",\r\n    margin: \"10px\",\r\n    padding: \"5px\",\r\n    boxShadow: \"lightgrey 0px 2px 3px 1px\"\r\n  },\r\n  button: {\r\n    border: \"none\",\r\n    padding: \"5px\",\r\n    backgroundColor:\"#EBECF0\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    border: \"none\",\r\n    ':focus': {\r\n      border: 'none'\r\n    }\r\n  } \r\n}\r\n\r\n\r\nexport default ({title, dragged, update}) => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [singleTask, setSingleTask] = useState(\"\")\r\n  const [addBtn, setAddbtn] = useState(false)\r\n  const allowDrop = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const [newData, setNewData] = useState([])\r\n \r\n  const handleKeypress =(e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleClick(e)\r\n    }\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    if (e.keyCode === 13) {\r\n      console.log(\"enter\")\r\n    }\r\n    setTasks([...tasks, singleTask]);\r\n    setSingleTask(\"\");\r\n    setAddbtn(false)\r\n  }\r\n\r\n  const drag = (e) => { \r\n    e.dataTransfer.setData(\"Text\", e.target.innerText );\r\n    setTimeout(()=>{e.target.style.display = \"none\"}, 0)\r\n  }\r\n\r\n  const drop = (e) => {\r\n    var data = e.dataTransfer.getData(\"Text\");\r\n    setNewData([...newData, data])\r\n    console.log(\"NEW DATA\", newData)  \r\n  }\r\n\r\n  const handleMouseEnter =(e) => {\r\n  }\r\n\r\n  return (\r\n    <div \r\n      style={styles.root} \r\n      className=\"wrapper\" \r\n      onDragOver={(e)=> allowDrop(e)}\r\n      onDrop={(e)=> drop(e)}\r\n      onMouseEnter={(e)=>{ handleMouseEnter(e) }}\r\n      id={title} \r\n    >\r\n      <div className=\"title\">\r\n        {title}\r\n      </div>\r\n      <div className=\"tasks\"  >\r\n        <div>{\r\n          newData && newData.map((i,idx)=>{\r\n            return (\r\n              <div\r\n              draggable=\"true\" \r\n              id={idx} \r\n              onDragStart={(e)=>drag(e)} \r\n              style={styles.single} \r\n              > {i} </div>\r\n            )\r\n          })\r\n        }</div>\r\n        {\r\n        tasks && tasks.map((i,idx) => {\r\n            return (\r\n              <div \r\n                draggable=\"true\" \r\n                id={idx} \r\n                onDragStart={(e)=>drag(e)} \r\n                style={styles.single} \r\n              >\r\n                {i}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <div>\r\n      {\r\n        !addBtn ? <button style={styles.button} onClick={()=>setAddbtn(true)}>+ add another card</button> : \r\n        <div>\r\n           <input style={styles.input} type=\"textarea\" autoFocus value={singleTask} onChange={(e)=>{setSingleTask(e.target.value)}} onKeyPress={handleKeypress} />\r\n           <button \r\n            onClick={ handleClick } \r\n           >\r\n             Add</button>\r\n           <button onClick={()=> {setAddbtn(false); setSingleTask(\"\")} }> X </button>\r\n        </div> \r\n      }\r\n    </div>\r\n  </div>\r\n  )\r\n}","import React, {useState} from \"react\";\r\n\r\nimport Title from \"./Title\"\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    \r\n  },\r\n}\r\n\r\n\r\nexport default () => {\r\n  const arrOfTitles = [\"backlog\", \"Todo\", \"in-progress\", \"done\", \"archive\"]\r\n\r\n  const [dragged, setDragged] = useState([])\r\n \r\n  function update(prop, tit) {\r\n    setDragged([...dragged, {prop: [...prop], [tit]: tit}])\r\n    // console.log(dragged)\r\n  }\r\n  console.log(\"dragged\", dragged)\r\n  return (\r\n    <div style={ styles.root }  >\r\n      {\r\n        arrOfTitles.map(i=>{\r\n          return (\r\n            <Title title={i}  dragged={dragged} update={update} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( \n    <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}